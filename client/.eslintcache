[{"F:\\Web Dev\\Projects\\Red onion resturent\\client\\src\\index.js":"1","F:\\Web Dev\\Projects\\Red onion resturent\\client\\src\\reportWebVitals.js":"2","F:\\Web Dev\\Projects\\Red onion resturent\\client\\src\\App.js":"3","F:\\Web Dev\\Projects\\Red onion resturent\\client\\src\\components\\Header\\Header.js":"4","F:\\Web Dev\\Projects\\Red onion resturent\\client\\src\\components\\Login\\useAuth.js":"5","F:\\Web Dev\\Projects\\Red onion resturent\\client\\src\\firebaseConfig.js":"6","F:\\Web Dev\\Projects\\Red onion resturent\\client\\src\\components\\Login\\Login.js":"7","F:\\Web Dev\\Projects\\Red onion resturent\\client\\src\\components\\Signup\\Signup.js":"8","F:\\Web Dev\\Projects\\Red onion resturent\\client\\src\\components\\NoMatch\\NoMatch.js":"9","F:\\Web Dev\\Projects\\Red onion resturent\\client\\src\\fakedata\\fakedata.js":"10","F:\\Web Dev\\Projects\\Red onion resturent\\client\\src\\components\\FoodMenu\\FoodMenu.js":"11","F:\\Web Dev\\Projects\\Red onion resturent\\client\\src\\components\\FoodDetail\\FoodDetail.js":"12","F:\\Web Dev\\Projects\\Red onion resturent\\client\\src\\components\\Food\\Food.js":"13"},{"size":500,"mtime":499162500000,"results":"14","hashOfConfig":"15"},{"size":362,"mtime":499162500000,"results":"16","hashOfConfig":"15"},{"size":1141,"mtime":1609424970683,"results":"17","hashOfConfig":"15"},{"size":2375,"mtime":1609424134081,"results":"18","hashOfConfig":"15"},{"size":3418,"mtime":1609414168606,"results":"19","hashOfConfig":"15"},{"size":390,"mtime":1609407269092,"results":"20","hashOfConfig":"15"},{"size":2350,"mtime":1609414165573,"results":"21","hashOfConfig":"15"},{"size":2452,"mtime":1609412276122,"results":"22","hashOfConfig":"15"},{"size":154,"mtime":1609421125013,"results":"23","hashOfConfig":"15"},{"size":6596,"mtime":1609424064968,"results":"24","hashOfConfig":"15"},{"size":7595,"mtime":1609425013140,"results":"25","hashOfConfig":"15"},{"size":2494,"mtime":1609424572409,"results":"26","hashOfConfig":"15"},{"size":832,"mtime":1609425110455,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"1wmfoqk",{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"35","messages":"36","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"30"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"54","messages":"55","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"F:\\Web Dev\\Projects\\Red onion resturent\\client\\src\\index.js",[],["56","57"],"F:\\Web Dev\\Projects\\Red onion resturent\\client\\src\\reportWebVitals.js",[],"F:\\Web Dev\\Projects\\Red onion resturent\\client\\src\\App.js",["58","59","60"],"F:\\Web Dev\\Projects\\Red onion resturent\\client\\src\\components\\Header\\Header.js",["61","62"],"F:\\Web Dev\\Projects\\Red onion resturent\\client\\src\\components\\Login\\useAuth.js",[],"F:\\Web Dev\\Projects\\Red onion resturent\\client\\src\\firebaseConfig.js",[],"F:\\Web Dev\\Projects\\Red onion resturent\\client\\src\\components\\Login\\Login.js",[],"F:\\Web Dev\\Projects\\Red onion resturent\\client\\src\\components\\Signup\\Signup.js",[],"F:\\Web Dev\\Projects\\Red onion resturent\\client\\src\\components\\NoMatch\\NoMatch.js",[],"F:\\Web Dev\\Projects\\Red onion resturent\\client\\src\\fakedata\\fakedata.js",[],"F:\\Web Dev\\Projects\\Red onion resturent\\client\\src\\components\\FoodMenu\\FoodMenu.js",["63","64","65","66","67","68"],"import React, { useState, useEffect } from 'react'\r\nimport './FoodMenu.css'\r\nimport { Nav, Row, Col, Container, Button, Alert } from 'react-bootstrap'\r\nimport Food from '../Food/Food'\r\nimport './FoodMenu.css'\r\nimport FoodDetail from '../FoodDetail/FoodDetail'\r\n// import Delivery from '../Delivery/Delivery'\r\n// import CartItem from '../CartItem/CartItem'\r\n// import { Elements } from '@stripe/react-stripe-js'\r\n// import { loadStripe } from '@stripe/stripe-js'\r\n// import CheckoutForm from '../Payment/CheckoutForm'\r\nimport Login from '../Login/Login'\r\nimport { useAuth } from '../Login/useAuth'\r\n\r\nconst FoodMenu = () => {\r\n  const [allItems, setAllItems] = useState([])\r\n  const [currentItems, setCurrentItems] = useState([])\r\n  const [currentSelectedItem, setCurrentSelectedItem] = useState(null)\r\n  const [cart, setCart] = useState([])\r\n  const [checkedOut, setCheckedOut] = useState(false)\r\n  const [deliveryInfoSubmit, setDeliveryInfoSubmit] = useState(false)\r\n  const [deliveryInformation, setDeliveryInformation] = useState(null)\r\n  const [orderId, setOrderId] = useState(null)\r\n\r\n  const auth = useAuth()\r\n\r\n  //   const stripePromise = loadStripe('pk_test_Qxc5rcBn8snxoC7d0Xm7tlGi00eXYINh85')\r\n\r\n  // load data\r\n  useEffect(() => {\r\n    fetch('http://localhost:5000/foods')\r\n      .then((res) => res.json())\r\n      .then((data) => {\r\n        setAllItems(data)\r\n        const currentCart = JSON.parse(localStorage.getItem('foodCart') || '[]')\r\n\r\n        if (currentCart) setCart(currentCart)\r\n      })\r\n\r\n      .catch((err) => console.log(err))\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    handleSelection('Breakfast')\r\n  }, [allItems])\r\n\r\n  const handleSelection = (category) => {\r\n    const currentItems = allItems.filter((food) => food.category === category)\r\n    setCurrentItems(currentItems)\r\n    setCurrentSelectedItem(null)\r\n  }\r\n\r\n  const handleCurrentSelectedItem = (item) => {\r\n    setCurrentSelectedItem(item)\r\n  }\r\n\r\n  const addToCart = (item) => {\r\n    const selectedItem = cart.find((it) => it.id === item.id)\r\n\r\n    if (selectedItem) {\r\n      const index = cart.indexOf(selectedItem)\r\n      const newCart = [...cart]\r\n      newCart[index] = item\r\n      localStorage.setItem('foodCart', JSON.stringify(newCart))\r\n\r\n      setCart(newCart)\r\n    } else {\r\n      console.log([...cart, item])\r\n      setCart([...cart, item])\r\n      localStorage.setItem('foodCart', JSON.stringify([...cart, item]))\r\n    }\r\n  }\r\n\r\n  const removeFromCart = (item) => {\r\n    console.log(item)\r\n  }\r\n\r\n  const handleCheckout = () => {\r\n    if (checkedOut) setCheckedOut(false)\r\n    else setCheckedOut(true)\r\n\r\n    // const currentCart = localStorage.getItem('foodCart');\r\n    // if(currentCart) setCart([...currentCart]);\r\n  }\r\n\r\n  const handleDeliveryInfoSubmit = (deliveryInfo) => {\r\n    if (deliveryInfoSubmit) setDeliveryInfoSubmit(false)\r\n    else {\r\n      setDeliveryInfoSubmit(true)\r\n      setDeliveryInformation(deliveryInfo)\r\n    }\r\n  }\r\n\r\n  //   const handlePlaceOrder = (payment) => {\r\n  //     const orderDetail = {\r\n  //       email: deliveryInformation.email,\r\n  //       cart: { cart },\r\n  //       shipment: deliveryInformation,\r\n  //       payment: payment,\r\n  //     }\r\n\r\n  //     fetch('https://red-onion-back.herokuapp.com/placeOrder', {\r\n  //       method: 'POST',\r\n  //       headers: {\r\n  //         'content-type': 'application/json',\r\n  //       },\r\n  //       body: JSON.stringify(orderDetail),\r\n  //     })\r\n  //       .then((res) => res.json())\r\n  //       .then((order) => {\r\n  //         setOrderId(order._id)\r\n  //         alert('Order Successful!')\r\n  //         localStorage.removeItem('foodCart')\r\n  //         setCart(null)\r\n  //       })\r\n  //       .catch((err) => console.log(err.message))\r\n  //   }\r\n\r\n  // const checkoutBtnMarkup = (cart === null) ? (\r\n\r\n  //                             ):\r\n\r\n  return (\r\n    <div className=\"food-menu\">\r\n      <Nav\r\n        activeKey=\"Breakfast\"\r\n        onSelect={(selectedKey) => {\r\n          handleSelection(selectedKey)\r\n        }}\r\n      >\r\n        <Nav.Item>\r\n          <Nav.Link eventKey=\"Breakfast\">Breakfast</Nav.Link>\r\n        </Nav.Item>\r\n        <Nav.Item>\r\n          <Nav.Link eventKey=\"Lunch\">Lunch</Nav.Link>\r\n        </Nav.Item>\r\n        <Nav.Item>\r\n          <Nav.Link eventKey=\"Dinner\">Dinner</Nav.Link>\r\n        </Nav.Item>\r\n      </Nav>\r\n\r\n      {!checkedOut && !orderId && (\r\n        <Container fluid=\"md\">\r\n          <Row>\r\n            {!currentSelectedItem &&\r\n              currentItems.map((item) => {\r\n                return (\r\n                  <Col\r\n                    md={4}\r\n                    xs={12}\r\n                    sm={12}\r\n                    className=\"food-item-col\"\r\n                    onClick={() => {\r\n                      handleCurrentSelectedItem(item)\r\n                    }}\r\n                  >\r\n                    <Food item={item} />\r\n                  </Col>\r\n                )\r\n              })}\r\n\r\n            {currentSelectedItem && (\r\n              <FoodDetail\r\n                food={currentSelectedItem}\r\n                addToCart={addToCart}\r\n                removeFromCart={removeFromCart}\r\n              />\r\n            )}\r\n          </Row>\r\n\r\n          {cart.length > 0 && (\r\n            <Button onClick={() => handleCheckout()}>\r\n              {' '}\r\n              Checkout Your Food{' '}\r\n            </Button>\r\n          )}\r\n          {cart.length === 0 && <Button disabled> Checkout Your Food </Button>}\r\n        </Container>\r\n      )}\r\n\r\n      {checkedOut && (\r\n        <Container fluid=\"md\">\r\n          <Row>\r\n            <Col\r\n              md={12}\r\n              style={{ display: deliveryInfoSubmit ? 'none' : 'block' }}\r\n            >\r\n              {auth.user && (\r\n                <Delivery deliveryInfoSubmit={handleDeliveryInfoSubmit} />\r\n              )}\r\n              {!auth.user && <Login path=\"/delivery\" />}\r\n            </Col>\r\n            <Col\r\n              md={12}\r\n              style={{ display: deliveryInfoSubmit ? 'block' : 'none' }}\r\n            >\r\n              <h3>Cart</h3>\r\n              <hr />\r\n              {deliveryInfoSubmit && !orderId && (\r\n                <div>\r\n                  <h4>From: KFC</h4>\r\n                  <h5>Arriving in: 20-30 min</h5>\r\n                  <h6>Customer Name: {deliveryInformation.name} </h6>\r\n                  <h6>Customer Address: {deliveryInformation.address}</h6>\r\n                  <h6>Mobile No.: {deliveryInformation.mobile}</h6>\r\n                  <hr />\r\n                  <br />\r\n                </div>\r\n              )}\r\n              {cart &&\r\n                cart.map((item) => {\r\n                  const singleItemPrice = allItems.find((i) => i.id === item.id)\r\n                    .price\r\n                  return (\r\n                    <CartItem\r\n                      item={item}\r\n                      singlePrice={singleItemPrice}\r\n                      addToCart={addToCart}\r\n                      removeFromCart={removeFromCart}\r\n                    />\r\n                  )\r\n                })}\r\n\r\n              {/* {orderId && (\r\n                <Alert variant=\"success\">\r\n                  Thanks for your order! Your order id: {orderId} <br />\r\n                  Eat Healthy!!\r\n                </Alert>\r\n              )}\r\n\r\n              {deliveryInfoSubmit && !orderId && (\r\n                <Elements stripe={stripePromise}>\r\n                  <CheckoutForm handlePlaceOrder={handlePlaceOrder} />\r\n                </Elements>\r\n              )} */}\r\n            </Col>\r\n          </Row>\r\n        </Container>\r\n      )}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default FoodMenu\r\n","F:\\Web Dev\\Projects\\Red onion resturent\\client\\src\\components\\FoodDetail\\FoodDetail.js",["69","70"],"F:\\Web Dev\\Projects\\Red onion resturent\\client\\src\\components\\Food\\Food.js",["71","72","73"],{"ruleId":"74","replacedBy":"75"},{"ruleId":"76","replacedBy":"77"},{"ruleId":"78","severity":1,"message":"79","line":7,"column":8,"nodeType":"80","messageId":"81","endLine":7,"endColumn":12},{"ruleId":"78","severity":1,"message":"82","line":9,"column":3,"nodeType":"80","messageId":"81","endLine":9,"endColumn":15},{"ruleId":"78","severity":1,"message":"83","line":11,"column":10,"nodeType":"80","messageId":"81","endLine":11,"endColumn":14},{"ruleId":"78","severity":1,"message":"84","line":6,"column":3,"nodeType":"80","messageId":"81","endLine":6,"endColumn":7},{"ruleId":"85","severity":1,"message":"86","line":30,"column":11,"nodeType":"87","endLine":30,"endColumn":51},{"ruleId":"78","severity":1,"message":"88","line":3,"column":44,"nodeType":"80","messageId":"81","endLine":3,"endColumn":49},{"ruleId":"78","severity":1,"message":"89","line":9,"column":10,"nodeType":"80","messageId":"81","endLine":9,"endColumn":18},{"ruleId":"78","severity":1,"message":"90","line":10,"column":10,"nodeType":"80","messageId":"81","endLine":10,"endColumn":20},{"ruleId":"78","severity":1,"message":"91","line":11,"column":8,"nodeType":"80","messageId":"81","endLine":11,"endColumn":20},{"ruleId":"78","severity":1,"message":"92","line":23,"column":19,"nodeType":"80","messageId":"81","endLine":23,"endColumn":29},{"ruleId":"93","severity":1,"message":"94","line":45,"column":6,"nodeType":"95","endLine":45,"endColumn":16,"suggestions":"96"},{"ruleId":"78","severity":1,"message":"97","line":1,"column":27,"nodeType":"80","messageId":"81","endLine":1,"endColumn":37},{"ruleId":"98","severity":1,"message":"99","line":77,"column":11,"nodeType":"87","endLine":77,"endColumn":74},{"ruleId":"78","severity":1,"message":"100","line":4,"column":8,"nodeType":"80","messageId":"81","endLine":4,"endColumn":14},{"ruleId":"78","severity":1,"message":"101","line":7,"column":42,"nodeType":"80","messageId":"81","endLine":7,"endColumn":49},{"ruleId":"78","severity":1,"message":"102","line":7,"column":51,"nodeType":"80","messageId":"81","endLine":7,"endColumn":59},"no-native-reassign",["103"],"no-negated-in-lhs",["104"],"no-unused-vars","'Auth' is defined but never used.","Identifier","unusedVar","'PrivateRoute' is defined but never used.","'auth' is defined but never used.","'Form' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'Alert' is defined but never used.","'Elements' is defined but never used.","'loadStripe' is defined but never used.","'CheckoutForm' is defined but never used.","'setOrderId' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'handleSelection'. Either include it or remove the dependency array.","ArrayExpression",["105"],"'useContext' is defined but never used.","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","'lunch1' is defined but never used.","'imgName' is assigned a value but never used.","'category' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"106","fix":"107"},"Update the dependencies array to be: [allItems, handleSelection]",{"range":"108","text":"109"},[1613,1623],"[allItems, handleSelection]"]