[{"F:\\Web Dev\\Projects\\Red onion resturent\\client\\src\\index.js":"1","F:\\Web Dev\\Projects\\Red onion resturent\\client\\src\\reportWebVitals.js":"2","F:\\Web Dev\\Projects\\Red onion resturent\\client\\src\\App.js":"3","F:\\Web Dev\\Projects\\Red onion resturent\\client\\src\\components\\Header\\Header.js":"4","F:\\Web Dev\\Projects\\Red onion resturent\\client\\src\\components\\Login\\useAuth.js":"5","F:\\Web Dev\\Projects\\Red onion resturent\\client\\src\\firebaseConfig.js":"6","F:\\Web Dev\\Projects\\Red onion resturent\\client\\src\\components\\Login\\Login.js":"7","F:\\Web Dev\\Projects\\Red onion resturent\\client\\src\\components\\Signup\\Signup.js":"8","F:\\Web Dev\\Projects\\Red onion resturent\\client\\src\\components\\NoMatch\\NoMatch.js":"9","F:\\Web Dev\\Projects\\Red onion resturent\\client\\src\\components\\FoodMenu\\FoodMenu.js":"10","F:\\Web Dev\\Projects\\Red onion resturent\\client\\src\\components\\FoodDetail\\FoodDetail.js":"11","F:\\Web Dev\\Projects\\Red onion resturent\\client\\src\\components\\Food\\Food.js":"12","F:\\Web Dev\\Projects\\Red onion resturent\\client\\src\\components\\Delivery\\Delivery.js":"13","F:\\Web Dev\\Projects\\Red onion resturent\\client\\src\\components\\CartItem\\CartItem.js":"14","F:\\Web Dev\\Projects\\Red onion resturent\\client\\src\\components\\Payment\\CheckoutForm.js":"15","F:\\Web Dev\\Projects\\Red onion resturent\\client\\src\\components\\PlaceOrder\\PlaceOrder.js":"16","F:\\Web Dev\\Projects\\Red onion resturent\\client\\src\\components\\NavBar\\NavBar.js":"17"},{"size":500,"mtime":499162500000,"results":"18","hashOfConfig":"19"},{"size":362,"mtime":499162500000,"results":"20","hashOfConfig":"19"},{"size":1551,"mtime":1609428253777,"results":"21","hashOfConfig":"19"},{"size":855,"mtime":1609428335814,"results":"22","hashOfConfig":"19"},{"size":3418,"mtime":1609414168606,"results":"23","hashOfConfig":"19"},{"size":390,"mtime":1609407269092,"results":"24","hashOfConfig":"19"},{"size":2350,"mtime":1609414165573,"results":"25","hashOfConfig":"19"},{"size":2452,"mtime":1609412276122,"results":"26","hashOfConfig":"19"},{"size":154,"mtime":1609421125013,"results":"27","hashOfConfig":"19"},{"size":7487,"mtime":1609437777844,"results":"28","hashOfConfig":"19"},{"size":2471,"mtime":1609484151668,"results":"29","hashOfConfig":"19"},{"size":865,"mtime":1609484091075,"results":"30","hashOfConfig":"19"},{"size":2931,"mtime":1609426576243,"results":"31","hashOfConfig":"19"},{"size":2185,"mtime":1609484200751,"results":"32","hashOfConfig":"19"},{"size":1522,"mtime":1609426715158,"results":"33","hashOfConfig":"19"},{"size":333,"mtime":1609426647954,"results":"34","hashOfConfig":"19"},{"size":1749,"mtime":1609428167846,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"1wmfoqk",{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"38"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"38"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"38"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"62","messages":"63","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"64","messages":"65","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"38"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"38"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"F:\\Web Dev\\Projects\\Red onion resturent\\client\\src\\index.js",[],["76","77"],"F:\\Web Dev\\Projects\\Red onion resturent\\client\\src\\reportWebVitals.js",[],"F:\\Web Dev\\Projects\\Red onion resturent\\client\\src\\App.js",["78","79"],"import React from 'react'\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom'\nimport './App.css'\nimport Header from './components/Header/Header'\nimport Login from './components/Login/Login'\nimport Signup from './components/Signup/Signup'\nimport Auth, {\n  AuthContextProvider,\n  PrivateRoute,\n} from './components/Login/useAuth'\nimport { auth } from 'firebase'\nimport NoMatch from './components/NoMatch/NoMatch'\nimport FoodMenu from './components/FoodMenu/FoodMenu'\nimport Delivery from './components/Delivery/Delivery'\nimport PlaceOrder from './components/PlaceOrder/PlaceOrder'\nimport NavBar from './components/NavBar/NavBar'\n\nfunction App() {\n  return (\n    <AuthContextProvider>\n      <div className=\"App\">\n        <Router>\n          <NavBar />\n\n          <Switch>\n            <Route path=\"/menu\">\n              <Header />\n              <FoodMenu />\n            </Route>\n            <Route path=\"/login\">\n              <Login />\n            </Route>\n            <Route path=\"/signup\">\n              <Signup />\n            </Route>\n\n            <PrivateRoute path=\"/delivery\">\n              <Delivery />\n            </PrivateRoute>\n            <PrivateRoute path=\"/orderplaced\">\n              <PlaceOrder />\n            </PrivateRoute>\n\n            <Route path=\"/\">\n              <Header />\n              <FoodMenu />\n            </Route>\n            <Route path=\"*\">\n              <NoMatch></NoMatch>\n            </Route>\n          </Switch>\n        </Router>\n      </div>\n    </AuthContextProvider>\n  )\n}\n\nexport default App\n","F:\\Web Dev\\Projects\\Red onion resturent\\client\\src\\components\\Header\\Header.js",["80"],"import React from 'react'\r\nimport { FormControl, Button, InputGroup } from 'react-bootstrap'\r\nimport './Header.css'\r\n\r\nimport { useAuth } from '../Login/useAuth'\r\nconst Header = () => {\r\n  const auth = useAuth()\r\n\r\n  return (\r\n    <div>\r\n      <section className=\"banner\">\r\n        <h1 className=\"banner-h1\">Best food waiting for your belly</h1>\r\n        <InputGroup className=\"mb-3\">\r\n          <FormControl\r\n            placeholder=\"Search food items\"\r\n            aria-label=\"Recipient's username\"\r\n            aria-describedby=\"basic-addon2\"\r\n            className=\"search-input\"\r\n          />\r\n          <InputGroup.Append>\r\n            <Button variant=\"danger\" className=\"search-btn\">\r\n              Search\r\n            </Button>\r\n          </InputGroup.Append>\r\n        </InputGroup>\r\n      </section>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Header\r\n","F:\\Web Dev\\Projects\\Red onion resturent\\client\\src\\components\\Login\\useAuth.js",[],"F:\\Web Dev\\Projects\\Red onion resturent\\client\\src\\firebaseConfig.js",[],"F:\\Web Dev\\Projects\\Red onion resturent\\client\\src\\components\\Login\\Login.js",[],"F:\\Web Dev\\Projects\\Red onion resturent\\client\\src\\components\\Signup\\Signup.js",[],"F:\\Web Dev\\Projects\\Red onion resturent\\client\\src\\components\\NoMatch\\NoMatch.js",[],"F:\\Web Dev\\Projects\\Red onion resturent\\client\\src\\components\\FoodMenu\\FoodMenu.js",["81"],"import React, { useState, useEffect } from 'react'\r\nimport { Nav, Row, Col, Container, Button, Alert } from 'react-bootstrap'\r\nimport Food from '../Food/Food'\r\nimport './FoodMenu.css'\r\nimport FoodDetail from '../FoodDetail/FoodDetail'\r\nimport Delivery from '../Delivery/Delivery'\r\nimport CartItem from '../CartItem/CartItem'\r\nimport { Elements } from '@stripe/react-stripe-js'\r\nimport { loadStripe } from '@stripe/stripe-js'\r\nimport CheckoutForm from '../Payment/CheckoutForm'\r\nimport Login from '../Login/Login'\r\nimport { useAuth } from '../Login/useAuth'\r\n\r\nconst FoodMenu = () => {\r\n  const [allItems, setAllItems] = useState([])\r\n  const [currentItems, setCurrentItems] = useState([])\r\n  const [currentSelectedItem, setCurrentSelectedItem] = useState(null)\r\n  const [cart, setCart] = useState([])\r\n  const [checkedOut, setCheckedOut] = useState(false)\r\n  const [deliveryInfoSubmit, setDeliveryInfoSubmit] = useState(false)\r\n  const [deliveryInformation, setDeliveryInformation] = useState(null)\r\n  const [orderId, setOrderId] = useState(null)\r\n\r\n  const auth = useAuth()\r\n\r\n  const stripePromise = loadStripe(\r\n    'pk_test_51HubhJHonQARCwkeqhDsoRgvql1fz9wDOl3tY2LwQ67mYp06UBDvNAJ45pS3Zffa2rIJMt22ATNLieFUq8OzDDfS00IB1GOyfL'\r\n  )\r\n\r\n  // load data\r\n  useEffect(() => {\r\n    fetch('http://localhost:5000/foods')\r\n      .then((res) => res.json())\r\n      .then((data) => {\r\n        setAllItems(data)\r\n        const currentCart = JSON.parse(localStorage.getItem('foodCart') || '[]')\r\n\r\n        if (currentCart) setCart(currentCart)\r\n      })\r\n\r\n      .catch((err) => console.log(err))\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    handleSelection('Breakfast')\r\n  }, [allItems])\r\n\r\n  const handleSelection = (category) => {\r\n    const currentItems = allItems.filter((food) => food.category === category)\r\n    setCurrentItems(currentItems)\r\n    setCurrentSelectedItem(null)\r\n  }\r\n\r\n  const handleCurrentSelectedItem = (item) => {\r\n    setCurrentSelectedItem(item)\r\n  }\r\n\r\n  const addToCart = (item) => {\r\n    const selectedItem = cart.find((it) => it.id === item.id)\r\n\r\n    if (selectedItem) {\r\n      const index = cart.indexOf(selectedItem)\r\n      const newCart = [...cart]\r\n      newCart[index] = item\r\n      localStorage.setItem('foodCart', JSON.stringify(newCart))\r\n\r\n      setCart(newCart)\r\n    } else {\r\n      console.log([...cart, item])\r\n      setCart([...cart, item])\r\n      localStorage.setItem('foodCart', JSON.stringify([...cart, item]))\r\n    }\r\n  }\r\n\r\n  const removeFromCart = (item) => {\r\n    console.log(item)\r\n  }\r\n\r\n  const handleCheckout = () => {\r\n    if (checkedOut) setCheckedOut(false)\r\n    else setCheckedOut(true)\r\n\r\n    // const currentCart = localStorage.getItem('foodCart');\r\n    // if(currentCart) setCart([...currentCart]);\r\n  }\r\n\r\n  const handleDeliveryInfoSubmit = (deliveryInfo) => {\r\n    if (deliveryInfoSubmit) setDeliveryInfoSubmit(false)\r\n    else {\r\n      setDeliveryInfoSubmit(true)\r\n      setDeliveryInformation(deliveryInfo)\r\n    }\r\n  }\r\n\r\n  const handlePlaceOrder = (payment) => {\r\n    const orderDetail = {\r\n      email: deliveryInformation.email,\r\n      cart: { cart },\r\n      shipment: deliveryInformation,\r\n      payment: payment,\r\n    }\r\n\r\n    fetch('http://localhost:5000/placeOrder', {\r\n      method: 'POST',\r\n      headers: {\r\n        'content-type': 'application/json',\r\n      },\r\n      body: JSON.stringify(orderDetail),\r\n    })\r\n      .then((res) => res.json())\r\n      .then((order) => {\r\n        setOrderId(order._id)\r\n        alert('Order Successful!')\r\n        localStorage.removeItem('foodCart')\r\n        setCart(null)\r\n      })\r\n      .catch((err) => console.log(err.message))\r\n  }\r\n\r\n  // const checkoutBtnMarkup = (cart === null) ? (\r\n\r\n  //                             ):\r\n\r\n  return (\r\n    <div className=\"food-menu\">\r\n      <Nav\r\n        activeKey=\"Breakfast\"\r\n        onSelect={(selectedKey) => {\r\n          handleSelection(selectedKey)\r\n        }}\r\n      >\r\n        <Nav.Item>\r\n          <Nav.Link eventKey=\"Breakfast\">Breakfast</Nav.Link>\r\n        </Nav.Item>\r\n        <Nav.Item>\r\n          <Nav.Link eventKey=\"Lunch\">Lunch</Nav.Link>\r\n        </Nav.Item>\r\n        <Nav.Item>\r\n          <Nav.Link eventKey=\"Dinner\">Dinner</Nav.Link>\r\n        </Nav.Item>\r\n      </Nav>\r\n\r\n      {!checkedOut && !orderId && (\r\n        <Container fluid=\"md\">\r\n          <Row>\r\n            {!currentSelectedItem &&\r\n              currentItems.map((item) => {\r\n                return (\r\n                  <Col\r\n                    md={4}\r\n                    xs={12}\r\n                    sm={12}\r\n                    className=\"food-item-col\"\r\n                    onClick={() => {\r\n                      handleCurrentSelectedItem(item)\r\n                    }}\r\n                  >\r\n                    <Food item={item} />\r\n                  </Col>\r\n                )\r\n              })}\r\n\r\n            {currentSelectedItem && (\r\n              <FoodDetail\r\n                food={currentSelectedItem}\r\n                addToCart={addToCart}\r\n                removeFromCart={removeFromCart}\r\n              />\r\n            )}\r\n          </Row>\r\n\r\n          {cart.length > 0 && (\r\n            <Button onClick={() => handleCheckout()}>\r\n              {' '}\r\n              Checkout Your Food{' '}\r\n            </Button>\r\n          )}\r\n          {cart.length === 0 && <Button disabled> Checkout Your Food </Button>}\r\n        </Container>\r\n      )}\r\n\r\n      {checkedOut && (\r\n        <Container fluid=\"md\">\r\n          <Row>\r\n            <Col\r\n              md={12}\r\n              style={{ display: deliveryInfoSubmit ? 'none' : 'block' }}\r\n            >\r\n              {auth.user && (\r\n                <Delivery deliveryInfoSubmit={handleDeliveryInfoSubmit} />\r\n              )}\r\n              {!auth.user && <Login path=\"/delivery\" />}\r\n            </Col>\r\n            <Col\r\n              md={12}\r\n              style={{ display: deliveryInfoSubmit ? 'block' : 'none' }}\r\n            >\r\n              <h3>Cart</h3>\r\n              <hr />\r\n              {deliveryInfoSubmit && !orderId && (\r\n                <div>\r\n                  <h4>From: KFC</h4>\r\n                  <h5>Arriving in: 20-30 min</h5>\r\n                  <h6>Customer Name: {deliveryInformation.name} </h6>\r\n                  <h6>Customer Address: {deliveryInformation.address}</h6>\r\n                  <h6>Mobile No.: {deliveryInformation.mobile}</h6>\r\n                  <hr />\r\n                  <br />\r\n                </div>\r\n              )}\r\n              {cart &&\r\n                cart.map((item) => {\r\n                  const singleItemPrice = allItems.find((i) => i.id === item.id)\r\n                    .price\r\n                  return (\r\n                    <CartItem\r\n                      item={item}\r\n                      singlePrice={singleItemPrice}\r\n                      addToCart={addToCart}\r\n                      removeFromCart={removeFromCart}\r\n                    />\r\n                  )\r\n                })}\r\n\r\n              {orderId && (\r\n                <Alert variant=\"success\">\r\n                  Thanks for your order! Your order id: {orderId} <br />\r\n                  Eat Healthy!!\r\n                </Alert>\r\n              )}\r\n\r\n              {deliveryInfoSubmit && !orderId && (\r\n                <Elements stripe={stripePromise}>\r\n                  <CheckoutForm handlePlaceOrder={handlePlaceOrder} />\r\n                </Elements>\r\n              )}\r\n            </Col>\r\n          </Row>\r\n        </Container>\r\n      )}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default FoodMenu\r\n","F:\\Web Dev\\Projects\\Red onion resturent\\client\\src\\components\\FoodDetail\\FoodDetail.js",["82","83"],"F:\\Web Dev\\Projects\\Red onion resturent\\client\\src\\components\\Food\\Food.js",["84"],"F:\\Web Dev\\Projects\\Red onion resturent\\client\\src\\components\\Delivery\\Delivery.js",["85"],"import React, { useState, useEffect } from 'react'\r\nimport { Form, Col, Row, Button, Alert } from 'react-bootstrap'\r\nimport './Delivery.css'\r\n\r\nconst Delivery = (props) => {\r\n  let deliveryInfo = {\r\n    name: '',\r\n    email: '',\r\n    address: '',\r\n    mobile: '',\r\n  }\r\n\r\n  let [isValid, setIsValid] = useState(true)\r\n\r\n  const isValidInfo = () => {\r\n    if (\r\n      deliveryInfo.name !== '' &&\r\n      deliveryInfo.email !== '' &&\r\n      deliveryInfo.address !== '' &&\r\n      deliveryInfo.mobile !== ''\r\n    )\r\n      return true\r\n    return false\r\n  }\r\n\r\n  const handleChange = (e) => {\r\n    e.preventDefault()\r\n    deliveryInfo[[e.target.name]] = e.target.value\r\n  }\r\n\r\n  const handleSubmit = () => {\r\n    if (isValidInfo()) {\r\n      setIsValid(true)\r\n      props.deliveryInfoSubmit(deliveryInfo)\r\n    } else setIsValid(false)\r\n  }\r\n\r\n  return (\r\n    <div className=\"delivery-info\">\r\n      <h3>Delivery info</h3>\r\n      <hr />\r\n\r\n      <Form>\r\n        {!isValid && <Alert variant=\"danger\">Please fill up all info!</Alert>}\r\n        <Form.Group as={Row} controlId=\"name\">\r\n          <Form.Label column sm={2}>\r\n            Name\r\n          </Form.Label>\r\n          <Col sm={10}>\r\n            <Form.Control\r\n              type=\"text\"\r\n              name=\"name\"\r\n              placeholder=\"Your Name\"\r\n              onChange={handleChange}\r\n            />\r\n          </Col>\r\n        </Form.Group>\r\n        <Form.Group as={Row} controlId=\"email\">\r\n          <Form.Label column sm={2}>\r\n            Email\r\n          </Form.Label>\r\n          <Col sm={10}>\r\n            <Form.Control\r\n              type=\"email\"\r\n              name=\"email\"\r\n              placeholder=\"Your Email\"\r\n              onChange={handleChange}\r\n            />\r\n          </Col>\r\n        </Form.Group>\r\n\r\n        <Form.Group as={Row} controlId=\"address\">\r\n          <Form.Label column sm={2}>\r\n            Address\r\n          </Form.Label>\r\n          <Col sm={10}>\r\n            <Form.Control\r\n              type=\"text\"\r\n              name=\"address\"\r\n              placeholder=\"Your Address\"\r\n              onChange={handleChange}\r\n            />\r\n          </Col>\r\n        </Form.Group>\r\n\r\n        <Form.Group as={Row} controlId=\"mobile\">\r\n          <Form.Label column sm={2}>\r\n            Mobile No.\r\n          </Form.Label>\r\n          <Col sm={10}>\r\n            <Form.Control\r\n              type=\"text\"\r\n              name=\"mobile\"\r\n              placeholder=\"Your Mobile No.\"\r\n              onChange={handleChange}\r\n            />\r\n          </Col>\r\n        </Form.Group>\r\n\r\n        <Form.Group as={Row}>\r\n          <Col sm={{ span: 10, offset: 2 }}>\r\n            <Button\r\n              variant=\"outline-danger\"\r\n              className=\"p10\"\r\n              onClick={() => handleSubmit()}\r\n            >\r\n              Save & Continue\r\n            </Button>\r\n          </Col>\r\n        </Form.Group>\r\n      </Form>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Delivery\r\n","F:\\Web Dev\\Projects\\Red onion resturent\\client\\src\\components\\CartItem\\CartItem.js",["86"],"F:\\Web Dev\\Projects\\Red onion resturent\\client\\src\\components\\Payment\\CheckoutForm.js",[],"F:\\Web Dev\\Projects\\Red onion resturent\\client\\src\\components\\PlaceOrder\\PlaceOrder.js",["87","88"],"import React from 'react'\r\nimport orderComplete from '../../images/screenshots/8 ordercomplete.png'\r\nimport Auth from '../Login/useAuth'\r\n\r\nconst PlaceOrder = (props) => {\r\n  const auth = Auth()\r\n  return (\r\n    <div>\r\n      <img src={orderComplete} style={{ width: '100%' }}></img>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default PlaceOrder\r\n","F:\\Web Dev\\Projects\\Red onion resturent\\client\\src\\components\\NavBar\\NavBar.js",[],{"ruleId":"89","replacedBy":"90"},{"ruleId":"91","replacedBy":"92"},{"ruleId":"93","severity":1,"message":"94","line":7,"column":8,"nodeType":"95","messageId":"96","endLine":7,"endColumn":12},{"ruleId":"93","severity":1,"message":"97","line":11,"column":10,"nodeType":"95","messageId":"96","endLine":11,"endColumn":14},{"ruleId":"93","severity":1,"message":"98","line":7,"column":9,"nodeType":"95","messageId":"96","endLine":7,"endColumn":13},{"ruleId":"99","severity":1,"message":"100","line":46,"column":6,"nodeType":"101","endLine":46,"endColumn":16,"suggestions":"102"},{"ruleId":"93","severity":1,"message":"103","line":1,"column":27,"nodeType":"95","messageId":"96","endLine":1,"endColumn":37},{"ruleId":"104","severity":1,"message":"105","line":76,"column":11,"nodeType":"106","endLine":76,"endColumn":74},{"ruleId":"93","severity":1,"message":"107","line":4,"column":8,"nodeType":"95","messageId":"96","endLine":4,"endColumn":17},{"ruleId":"93","severity":1,"message":"108","line":1,"column":27,"nodeType":"95","messageId":"96","endLine":1,"endColumn":36},{"ruleId":"93","severity":1,"message":"109","line":2,"column":15,"nodeType":"95","messageId":"96","endLine":2,"endColumn":24},{"ruleId":"93","severity":1,"message":"98","line":6,"column":9,"nodeType":"95","messageId":"96","endLine":6,"endColumn":13},{"ruleId":"110","severity":1,"message":"111","line":9,"column":7,"nodeType":"106","endLine":9,"endColumn":58},"no-native-reassign",["112"],"no-negated-in-lhs",["113"],"no-unused-vars","'Auth' is defined but never used.","Identifier","unusedVar","'auth' is defined but never used.","'auth' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'handleSelection'. Either include it or remove the dependency array.","ArrayExpression",["114"],"'useContext' is defined but never used.","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","'breakfast' is defined but never used.","'useEffect' is defined but never used.","'Container' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","no-global-assign","no-unsafe-negation",{"desc":"115","fix":"116"},"Update the dependencies array to be: [allItems, handleSelection]",{"range":"117","text":"118"},[1658,1668],"[allItems, handleSelection]"]