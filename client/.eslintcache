[{"F:\\Web Dev\\Projects\\Red onion resturent\\client\\src\\index.js":"1","F:\\Web Dev\\Projects\\Red onion resturent\\client\\src\\reportWebVitals.js":"2","F:\\Web Dev\\Projects\\Red onion resturent\\client\\src\\App.js":"3","F:\\Web Dev\\Projects\\Red onion resturent\\client\\src\\components\\Header\\Header.js":"4","F:\\Web Dev\\Projects\\Red onion resturent\\client\\src\\components\\Login\\useAuth.js":"5","F:\\Web Dev\\Projects\\Red onion resturent\\client\\src\\firebaseConfig.js":"6","F:\\Web Dev\\Projects\\Red onion resturent\\client\\src\\components\\Login\\Login.js":"7","F:\\Web Dev\\Projects\\Red onion resturent\\client\\src\\components\\Signup\\Signup.js":"8","F:\\Web Dev\\Projects\\Red onion resturent\\client\\src\\components\\NoMatch\\NoMatch.js":"9","F:\\Web Dev\\Projects\\Red onion resturent\\client\\src\\components\\FoodMenu\\FoodMenu.js":"10","F:\\Web Dev\\Projects\\Red onion resturent\\client\\src\\components\\FoodDetail\\FoodDetail.js":"11","F:\\Web Dev\\Projects\\Red onion resturent\\client\\src\\components\\Food\\Food.js":"12","F:\\Web Dev\\Projects\\Red onion resturent\\client\\src\\components\\Delivery\\Delivery.js":"13","F:\\Web Dev\\Projects\\Red onion resturent\\client\\src\\components\\CartItem\\CartItem.js":"14","F:\\Web Dev\\Projects\\Red onion resturent\\client\\src\\components\\Payment\\CheckoutForm.js":"15","F:\\Web Dev\\Projects\\Red onion resturent\\client\\src\\components\\PlaceOrder\\PlaceOrder.js":"16","F:\\Web Dev\\Projects\\Red onion resturent\\client\\src\\components\\NavBar\\NavBar.js":"17","F:\\Web Dev\\Projects\\Red onion resturent\\client\\src\\components\\fakedata\\fakedata.js":"18"},{"size":500,"mtime":499162500000,"results":"19","hashOfConfig":"20"},{"size":362,"mtime":499162500000,"results":"21","hashOfConfig":"20"},{"size":1456,"mtime":1609602490725,"results":"22","hashOfConfig":"20"},{"size":783,"mtime":1609484424271,"results":"23","hashOfConfig":"20"},{"size":3418,"mtime":1609414168606,"results":"24","hashOfConfig":"20"},{"size":390,"mtime":1609407269092,"results":"25","hashOfConfig":"20"},{"size":2350,"mtime":1609414165573,"results":"26","hashOfConfig":"20"},{"size":2452,"mtime":1609412276122,"results":"27","hashOfConfig":"20"},{"size":154,"mtime":1609421125013,"results":"28","hashOfConfig":"20"},{"size":8320,"mtime":1609603520082,"results":"29","hashOfConfig":"20"},{"size":2473,"mtime":1609599921707,"results":"30","hashOfConfig":"20"},{"size":991,"mtime":1609599992067,"results":"31","hashOfConfig":"20"},{"size":2931,"mtime":1609426576243,"results":"32","hashOfConfig":"20"},{"size":2185,"mtime":1609602115902,"results":"33","hashOfConfig":"20"},{"size":1522,"mtime":1609426715158,"results":"34","hashOfConfig":"20"},{"size":333,"mtime":1609426647954,"results":"35","hashOfConfig":"20"},{"size":1782,"mtime":1609601582782,"results":"36","hashOfConfig":"20"},{"size":6875,"mtime":1609521881667,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"1wmfoqk",{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"59","messages":"60","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"40"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"40"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"40"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"40"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"40"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},"F:\\Web Dev\\Projects\\Red onion resturent\\client\\src\\index.js",[],["81","82"],"F:\\Web Dev\\Projects\\Red onion resturent\\client\\src\\reportWebVitals.js",[],"F:\\Web Dev\\Projects\\Red onion resturent\\client\\src\\App.js",["83","84"],"F:\\Web Dev\\Projects\\Red onion resturent\\client\\src\\components\\Header\\Header.js",[],"F:\\Web Dev\\Projects\\Red onion resturent\\client\\src\\components\\Login\\useAuth.js",[],"F:\\Web Dev\\Projects\\Red onion resturent\\client\\src\\firebaseConfig.js",[],"F:\\Web Dev\\Projects\\Red onion resturent\\client\\src\\components\\Login\\Login.js",[],"F:\\Web Dev\\Projects\\Red onion resturent\\client\\src\\components\\Signup\\Signup.js",[],"F:\\Web Dev\\Projects\\Red onion resturent\\client\\src\\components\\NoMatch\\NoMatch.js",[],"F:\\Web Dev\\Projects\\Red onion resturent\\client\\src\\components\\FoodMenu\\FoodMenu.js",["85"],"F:\\Web Dev\\Projects\\Red onion resturent\\client\\src\\components\\FoodDetail\\FoodDetail.js",["86","87"],"import React, { useState, useContext } from 'react'\r\nimport { Button, Container, Row, Col } from 'react-bootstrap'\r\nimport './FoodDetail.css'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faCartPlus } from '@fortawesome/free-solid-svg-icons'\r\n\r\nconst FoodDetail = (props) => {\r\n  const { name, longDescription, price, imgName, category } = props.food\r\n  const [quantityCount, setQuantityCount] = useState(1)\r\n  const [currentItemTotalPrice, setCurrentItemTotalPrice] = useState(price)\r\n\r\n  const images = require.context('../../menu', true)\r\n  const imagePath = images(`./${category.toLowerCase()}/${imgName}`).default\r\n\r\n  const handleMinusClick = () => {\r\n    if (quantityCount > 1) {\r\n      setQuantityCount(quantityCount - 1)\r\n      const totPrice = currentItemTotalPrice - price\r\n      setCurrentItemTotalPrice(totPrice)\r\n    }\r\n  }\r\n\r\n  const handlePlusClick = () => {\r\n    if (quantityCount < 5) {\r\n      setQuantityCount(quantityCount + 1)\r\n      const totPrice = currentItemTotalPrice + price\r\n      setCurrentItemTotalPrice(totPrice)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Container>\r\n      <Row>\r\n        <Col md={6}>\r\n          <h1>{name}</h1>\r\n          <p> {longDescription} </p>\r\n          <span className=\"price-span\">\r\n            <h4>${currentItemTotalPrice}</h4>\r\n            <button\r\n              className=\"btn btn-danger quantity-minus-btn\"\r\n              onClick={handleMinusClick}\r\n            >\r\n              -\r\n            </button>\r\n            <input\r\n              type=\"text\"\r\n              value={quantityCount}\r\n              className=\"quantity-input\"\r\n            />\r\n            <button\r\n              className=\"btn btn-success quantity-plus-btn\"\r\n              onClick={handlePlusClick}\r\n            >\r\n              +\r\n            </button>\r\n          </span>\r\n          <br />\r\n          <br />\r\n          <br />\r\n\r\n          <Button\r\n            className=\"my-btn\"\r\n            variant=\"outline-danger\"\r\n            onClick={() =>\r\n              props.addToCart({\r\n                ...props.food,\r\n                price: currentItemTotalPrice,\r\n                quantity: quantityCount,\r\n              })\r\n            }\r\n          >\r\n            <FontAwesomeIcon icon={faCartPlus} /> Add\r\n          </Button>\r\n        </Col>\r\n\r\n        <Col md={6}>\r\n          <img src={imagePath} alt=\"Food image\" className=\"food-image\" />\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default FoodDetail\r\n","F:\\Web Dev\\Projects\\Red onion resturent\\client\\src\\components\\Food\\Food.js",["88","89","90"],"import React, { useState, useEffect } from 'react'\r\nimport './Food.css'\r\nimport { Card } from 'react-bootstrap'\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst Food = (props) => {\r\n  const {\r\n    name,\r\n    shortDescription,\r\n    price,\r\n    imgName,\r\n    category,\r\n    key: key1,\r\n  } = props.item\r\n\r\n  const images = require.context('../../menu', true)\r\n  const imagePath = images(`./${category.toLowerCase()}/${imgName}`).default\r\n\r\n  return (\r\n    <div>\r\n      <Link>\r\n        <Card style={{ width: '18rem', cursor: 'pointer' }}>\r\n          <Card.Img\r\n            src={imagePath}\r\n            variant=\"top\"\r\n            className=\"card-image\"\r\n            alt=\"img\"\r\n          />\r\n          <Card.Body>\r\n            <Card.Title>{name}</Card.Title>\r\n            <Card.Text>{shortDescription}</Card.Text>\r\n            <Card.Subtitle className=\"mb-2 text-muted\">${price}</Card.Subtitle>\r\n          </Card.Body>\r\n        </Card>\r\n      </Link>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Food\r\n","F:\\Web Dev\\Projects\\Red onion resturent\\client\\src\\components\\Delivery\\Delivery.js",["91"],"import React, { useState, useEffect } from 'react'\r\nimport { Form, Col, Row, Button, Alert } from 'react-bootstrap'\r\nimport './Delivery.css'\r\n\r\nconst Delivery = (props) => {\r\n  let deliveryInfo = {\r\n    name: '',\r\n    email: '',\r\n    address: '',\r\n    mobile: '',\r\n  }\r\n\r\n  let [isValid, setIsValid] = useState(true)\r\n\r\n  const isValidInfo = () => {\r\n    if (\r\n      deliveryInfo.name !== '' &&\r\n      deliveryInfo.email !== '' &&\r\n      deliveryInfo.address !== '' &&\r\n      deliveryInfo.mobile !== ''\r\n    )\r\n      return true\r\n    return false\r\n  }\r\n\r\n  const handleChange = (e) => {\r\n    e.preventDefault()\r\n    deliveryInfo[[e.target.name]] = e.target.value\r\n  }\r\n\r\n  const handleSubmit = () => {\r\n    if (isValidInfo()) {\r\n      setIsValid(true)\r\n      props.deliveryInfoSubmit(deliveryInfo)\r\n    } else setIsValid(false)\r\n  }\r\n\r\n  return (\r\n    <div className=\"delivery-info\">\r\n      <h3>Delivery info</h3>\r\n      <hr />\r\n\r\n      <Form>\r\n        {!isValid && <Alert variant=\"danger\">Please fill up all info!</Alert>}\r\n        <Form.Group as={Row} controlId=\"name\">\r\n          <Form.Label column sm={2}>\r\n            Name\r\n          </Form.Label>\r\n          <Col sm={10}>\r\n            <Form.Control\r\n              type=\"text\"\r\n              name=\"name\"\r\n              placeholder=\"Your Name\"\r\n              onChange={handleChange}\r\n            />\r\n          </Col>\r\n        </Form.Group>\r\n        <Form.Group as={Row} controlId=\"email\">\r\n          <Form.Label column sm={2}>\r\n            Email\r\n          </Form.Label>\r\n          <Col sm={10}>\r\n            <Form.Control\r\n              type=\"email\"\r\n              name=\"email\"\r\n              placeholder=\"Your Email\"\r\n              onChange={handleChange}\r\n            />\r\n          </Col>\r\n        </Form.Group>\r\n\r\n        <Form.Group as={Row} controlId=\"address\">\r\n          <Form.Label column sm={2}>\r\n            Address\r\n          </Form.Label>\r\n          <Col sm={10}>\r\n            <Form.Control\r\n              type=\"text\"\r\n              name=\"address\"\r\n              placeholder=\"Your Address\"\r\n              onChange={handleChange}\r\n            />\r\n          </Col>\r\n        </Form.Group>\r\n\r\n        <Form.Group as={Row} controlId=\"mobile\">\r\n          <Form.Label column sm={2}>\r\n            Mobile No.\r\n          </Form.Label>\r\n          <Col sm={10}>\r\n            <Form.Control\r\n              type=\"text\"\r\n              name=\"mobile\"\r\n              placeholder=\"Your Mobile No.\"\r\n              onChange={handleChange}\r\n            />\r\n          </Col>\r\n        </Form.Group>\r\n\r\n        <Form.Group as={Row}>\r\n          <Col sm={{ span: 10, offset: 2 }}>\r\n            <Button\r\n              variant=\"outline-danger\"\r\n              className=\"p10\"\r\n              onClick={() => handleSubmit()}\r\n            >\r\n              Save & Continue\r\n            </Button>\r\n          </Col>\r\n        </Form.Group>\r\n      </Form>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Delivery\r\n","F:\\Web Dev\\Projects\\Red onion resturent\\client\\src\\components\\CartItem\\CartItem.js",["92"],"import React, { useState } from 'react'\r\nimport { Row, Container, Col } from 'react-bootstrap'\r\nimport './CartItem.css'\r\n\r\nconst CartItem = (props) => {\r\n  const { name, price, imgName, quantity, category } = props.item\r\n\r\n  const [quantityCount, setQuantityCount] = useState(quantity)\r\n  const [currentItemTotalPrice, setCurrentItemTotalPrice] = useState(price)\r\n  const singlePrice = props.singlePrice\r\n\r\n  const images = require.context('../../menu', true)\r\n  const imagePath = images(`./${category.toLowerCase()}/${imgName}`).default\r\n\r\n  const handleMinusClick = () => {\r\n    if (quantityCount > 1) {\r\n      setQuantityCount(quantityCount - 1)\r\n      const totPrice = singlePrice * (quantityCount - 1)\r\n      setCurrentItemTotalPrice(totPrice)\r\n\r\n      const item = {\r\n        ...props.item,\r\n        price: totPrice,\r\n        quantity: quantityCount - 1,\r\n      }\r\n      props.addToCart(item)\r\n    }\r\n  }\r\n\r\n  const handlePlusClick = () => {\r\n    if (quantityCount < 5) {\r\n      setQuantityCount(quantityCount + 1)\r\n\r\n      const totPrice = singlePrice * (quantityCount + 1)\r\n      setCurrentItemTotalPrice(totPrice)\r\n\r\n      const item = {\r\n        ...props.item,\r\n        price: totPrice,\r\n        quantity: quantityCount + 1,\r\n      }\r\n      props.addToCart(item)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"cart-item\">\r\n      <Row>\r\n        <Col md={4}>\r\n          <img src={imagePath} className=\"img-thumbnail\" alt=\"thumbnail\" />\r\n        </Col>\r\n\r\n        <Col md={4}>\r\n          <h6>{name}</h6> <br />\r\n          <h4>${currentItemTotalPrice}</h4>\r\n          <small>Delivery free!</small>\r\n        </Col>\r\n\r\n        <Col md={4}>\r\n          <button\r\n            className=\"btn btn-danger quantity-minus-btn\"\r\n            onClick={() => handleMinusClick()}\r\n          >\r\n            -\r\n          </button>\r\n          <input type=\"text\" value={quantityCount} className=\"quantity-input\" />\r\n          <button\r\n            className=\"btn btn-success quantity-plus-btn\"\r\n            onClick={() => {\r\n              handlePlusClick()\r\n            }}\r\n          >\r\n            +\r\n          </button>\r\n        </Col>\r\n      </Row>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default CartItem\r\n","F:\\Web Dev\\Projects\\Red onion resturent\\client\\src\\components\\Payment\\CheckoutForm.js",[],"F:\\Web Dev\\Projects\\Red onion resturent\\client\\src\\components\\PlaceOrder\\PlaceOrder.js",["93","94"],"import React from 'react'\r\nimport orderComplete from '../../images/screenshots/8 ordercomplete.png'\r\nimport Auth from '../Login/useAuth'\r\n\r\nconst PlaceOrder = (props) => {\r\n  const auth = Auth()\r\n  return (\r\n    <div>\r\n      <img src={orderComplete} style={{ width: '100%' }}></img>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default PlaceOrder\r\n","F:\\Web Dev\\Projects\\Red onion resturent\\client\\src\\components\\NavBar\\NavBar.js",[],"F:\\Web Dev\\Projects\\Red onion resturent\\client\\src\\components\\fakedata\\fakedata.js",[],["95","96"],{"ruleId":"97","replacedBy":"98"},{"ruleId":"99","replacedBy":"100"},{"ruleId":"101","severity":1,"message":"102","line":7,"column":8,"nodeType":"103","messageId":"104","endLine":7,"endColumn":12},{"ruleId":"101","severity":1,"message":"105","line":11,"column":10,"nodeType":"103","messageId":"104","endLine":11,"endColumn":14},{"ruleId":"106","severity":1,"message":"107","line":47,"column":6,"nodeType":"108","endLine":47,"endColumn":16,"suggestions":"109"},{"ruleId":"101","severity":1,"message":"110","line":1,"column":27,"nodeType":"103","messageId":"104","endLine":1,"endColumn":37},{"ruleId":"111","severity":1,"message":"112","line":77,"column":11,"nodeType":"113","endLine":77,"endColumn":74},{"ruleId":"101","severity":1,"message":"114","line":1,"column":17,"nodeType":"103","messageId":"104","endLine":1,"endColumn":25},{"ruleId":"101","severity":1,"message":"115","line":1,"column":27,"nodeType":"103","messageId":"104","endLine":1,"endColumn":36},{"ruleId":"101","severity":1,"message":"116","line":13,"column":10,"nodeType":"103","messageId":"104","endLine":13,"endColumn":14},{"ruleId":"101","severity":1,"message":"115","line":1,"column":27,"nodeType":"103","messageId":"104","endLine":1,"endColumn":36},{"ruleId":"101","severity":1,"message":"117","line":2,"column":15,"nodeType":"103","messageId":"104","endLine":2,"endColumn":24},{"ruleId":"101","severity":1,"message":"118","line":6,"column":9,"nodeType":"103","messageId":"104","endLine":6,"endColumn":13},{"ruleId":"119","severity":1,"message":"120","line":9,"column":7,"nodeType":"113","endLine":9,"endColumn":58},{"ruleId":"97","replacedBy":"121"},{"ruleId":"99","replacedBy":"122"},"no-native-reassign",["123"],"no-negated-in-lhs",["124"],"no-unused-vars","'Auth' is defined but never used.","Identifier","unusedVar","'auth' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'handleSelection'. Either include it or remove the dependency array.","ArrayExpression",["125"],"'useContext' is defined but never used.","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","'useState' is defined but never used.","'useEffect' is defined but never used.","'key1' is assigned a value but never used.","'Container' is defined but never used.","'auth' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.",["123"],["124"],"no-global-assign","no-unsafe-negation",{"desc":"126","fix":"127"},"Update the dependencies array to be: [allItems, handleSelection]",{"range":"128","text":"129"},[1712,1722],"[allItems, handleSelection]"]